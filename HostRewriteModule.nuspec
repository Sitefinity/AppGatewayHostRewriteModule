<?xml version="1.0" encoding="utf-8" ?>
<package>
  <metadata>
    <id>AppGatewayHostRewriteModule</id>
    <title>[Deprecated] Application Gateway Host Rewrite Module</title>
    <version>1.0.3</version>
    <authors>Progress Software Corporation</authors>
    <licenseUrl>https://github.com/Sitefinity/AppGatewayHostRewriteModule/blob/master/LICENSE.txt</licenseUrl>
    <projectUrl>https://github.com/Sitefinity/AppGatewayHostRewriteModule</projectUrl>	  
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>[Deprecated] Replaces the Host header with the X-Original-Host on IIS of App Service via a native C++ module. NOTE: There is a popular approach to replace the HOST header with the value of X-Original-Host header by unlocking the Host and X-Original-Host headers, so they can be rewritten using rewrite rules. Once the request reaches the App Service, the value of the HOST header is set to the value of the X-Original-Host header. However, this approach has a pitfall. If there are other rewrite rules executed after the rule for rewriting the HOST header, they do not respect the new value of the HOST header. Using the native IIS module ensures that the HOST header has taken the value of the X-Original-Host header before the rewrite module steps in.</description>
    <tags>AzureSiteExtension x-original-host host header rewrite azure application-gateway app-gateway reverse-proxy</tags>
    <packageTypes>
      <packageType name="AzureSiteExtension" />
    </packageTypes>
  </metadata>
  <files>
    <file src="bin\HostRewriteModule.dll" target="Content" />
    <file src="applicationHost.xdt" target="Content" />
  </files>
</package>
