<?xml version="1.0" encoding="utf-8" ?>
<package>
  <metadata>
    <id>AppGatewayHostRewriteModule</id>
    <title>Application Gateway Host Rewrite Module</title>
    <version>1.0.0</version>
    <authors>Progress Software Corporation</authors>
    <licenseUrl>https://github.com/Sitefinity/AppGatewayHostRewriteModule/blob/master/LICENSE.txt</licenseUrl>
    <projectUrl>https://github.com/Sitefinity/AppGatewayHostRewriteModule</projectUrl>	  
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>Replaces the Host header with the X-Original-Host on IIS of App Service via native C++ module. NOTE: There is an approach to rewrite the HOST header with the value of X-Original-Host header by firstly unlocking the Host and X-Original-Host headers so they can be rewritten using rewrite rules. And then once the request reaches the App Service, the value of HOST header is set to the value of X-Original-Host header. However this approach has one general pitfall, if there are other rewrite rules executed after the rule for rewriting the HOST header, they do not respect the new value of HOST header. Using the native module, ensures that HOST header has taken the value of X-Original-Host header before the rewrite module steps in.</description>
    <tags>AzureSiteExtension x-original-host host header rewrite azure application-gateway app-gateway reverse-proxy</tags>
    <packageTypes>
      <packageType name="AzureSiteExtension" />
    </packageTypes>
  </metadata>
  <files>
	
    <file src="bin\HostRewriteModule.dll" target="Content" />
	<file src="applicationHost.xdt" target="Content" />
  </files>
</package>
